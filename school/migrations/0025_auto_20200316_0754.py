# Generated by Django 3.0.3 on 2020-03-16 07:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('school', '0024_auto_20200310_1658'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lower_primary_grade_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Only characters are allowed for Student name.', regex='^[a-zA-Z\\s]+$')])),
                ('registration_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'L' followed by 4 digits for lower primary otherwise invalid registration number.", regex='[L]\\d{4}')])),
                ('student_class', models.CharField(choices=[('Grade 2', 'Grade 2')], max_length=15)),
                ('student_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=15)),
                ('parent_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='invalid phone number, phone number should be in the format of +254', regex='(\\+254)\\s*?(\\d{3})\\s*?(\\d{3})\\s*?(\\d{3})')])),
            ],
        ),
        migrations.CreateModel(
            name='Lower_primary_grade_3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Only characters are allowed for Student name.', regex='^[a-zA-Z\\s]+$')])),
                ('registration_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'L' followed by 4 digits for lower primary otherwise invalid registration number.", regex='[L]\\d{4}')])),
                ('student_class', models.CharField(choices=[('Grade 3', 'Grade 3')], max_length=15)),
                ('student_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=15)),
                ('parent_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='invalid phone number, phone number should be in the format of +254', regex='(\\+254)\\s*?(\\d{3})\\s*?(\\d{3})\\s*?(\\d{3})')])),
            ],
        ),
        migrations.CreateModel(
            name='Pre_primary_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Only characters are allowed for Student name.', regex='^[a-zA-Z\\s]+$')])),
                ('registration_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'P' followed by 4 digits for pre primary otherwise invalid registration number.", regex='[P]\\d{4}')])),
                ('student_class', models.CharField(choices=[('Two', 'Pre_primary 1')], max_length=15)),
                ('student_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=15)),
                ('parent_name', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='invalid phone number, phone number should be in the format of +254', regex='(\\+254)\\s*?(\\d{3})\\s*?(\\d{3})\\s*?(\\d{3})')])),
            ],
        ),
        migrations.CreateModel(
            name='Upper_primary_grade_5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Only characters are allowed for Student name.', regex='^[a-zA-Z\\s]+$')])),
                ('registration_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'U' followed by 4 digits for upper primary otherwise invalid registration number.", regex='[U]\\d{4}')])),
                ('student_class', models.CharField(choices=[('Grade 5', 'Grade 5')], max_length=15)),
                ('student_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=115, null=True)),
                ('parent_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='invalid phone number, phone number should be in the format of +254', regex='(\\+254)\\s*?(\\d{3})\\s*?(\\d{3})\\s*?(\\d{3})')])),
            ],
        ),
        migrations.CreateModel(
            name='Upper_primary_grade_6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Only characters are allowed for Student name.', regex='^[a-zA-Z\\s]+$')])),
                ('registration_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'U' followed by 4 digits for upper primary otherwise invalid registration number.", regex='[U]\\d{4}')])),
                ('student_class', models.CharField(choices=[('Grade 6', 'Grade 6')], max_length=15)),
                ('student_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=115, null=True)),
                ('parent_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='invalid phone number, phone number should be in the format of +254', regex='(\\+254)\\s*?(\\d{3})\\s*?(\\d{3})\\s*?(\\d{3})')])),
            ],
        ),
        migrations.AlterField(
            model_name='lower_primary',
            name='student_class',
            field=models.CharField(choices=[('Grade 1', 'Grade 1')], max_length=15),
        ),
        migrations.AlterField(
            model_name='pre_primary',
            name='student_class',
            field=models.CharField(choices=[('Two', 'Pre_primary 1')], max_length=15),
        ),
        migrations.AlterField(
            model_name='upper_primary',
            name='registration_number',
            field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message="Registration number should start with 'U' followed by 4 digits for upper primary otherwise invalid registration number.", regex='[U]\\d{4}')]),
        ),
        migrations.AlterField(
            model_name='upper_primary',
            name='student_class',
            field=models.CharField(choices=[('Grade 4', 'Grade 4')], max_length=15),
        ),
    ]
